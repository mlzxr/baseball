<?xml version="1.0" encoding="UTF-8"?>
<project name="module_imageloader" default="compile.module.imageloader">
  <dirname property="module.imageloader.basedir" file="${ant.file.module_imageloader}"/>
  
  <property name="module.jdk.home.imageloader" value="${jdk.home.android_api_23_platform}"/>
  <property name="module.jdk.bin.imageloader" value="${jdk.bin.android_api_23_platform}"/>
  <property name="module.jdk.classpath.imageloader" value="jdk.classpath.android_api_23_platform"/>
  
  <property name="compiler.args.imageloader" value="-encoding UTF-8 -source 1.6 -target 1.6 ${compiler.args}"/>
  
  <property name="imageloader.output.dir" value="${module.imageloader.basedir}/build/intermediates/classes/debug"/>
  <property name="imageloader.testoutput.dir" value="${module.imageloader.basedir}/build/intermediates/classes/test/debug"/>
  
  <path id="imageloader.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="imageloader.module.production.classpath">
    <path refid="${module.jdk.classpath.imageloader}"/>
  </path>
  
  <path id="imageloader.runtime.production.module.classpath">
    <pathelement location="${imageloader.output.dir}"/>
  </path>
  
  <path id="imageloader.module.classpath">
    <path refid="${module.jdk.classpath.imageloader}"/>
    <pathelement location="${imageloader.output.dir}"/>
    <path refid="library.maven-ant-tasks-2.1.3.classpath"/>
    <path refid="library.ant-1.8.0.classpath"/>
    <path refid="library.assertj-core-1.6.1.classpath"/>
    <path refid="library.icu4j-53.1.classpath"/>
    <path refid="library.robolectric-annotations-3.0-rc3.classpath"/>
    <path refid="library.shadows-core-3.0-rc3.classpath"/>
    <path refid="library.robolectric-3.0-rc3.classpath"/>
    <path refid="library.accessibility-test-framework-1.0.classpath"/>
    <path refid="library.asm-commons-5.0.1.classpath"/>
    <path refid="library.ant-launcher-1.8.0.classpath"/>
    <path refid="library.support-annotations-20.0.0.classpath"/>
    <path refid="library.robolectric-resources-3.0-rc3.classpath"/>
    <path refid="library.sqlite4java-0.282.classpath"/>
    <path refid="library.asm-tree-5.0.1.classpath"/>
    <path refid="library.asm-5.0.1.classpath"/>
    <path refid="library.assertj-android-1.0.0.classpath"/>
    <path refid="library.asm-analysis-5.0.1.classpath"/>
    <path refid="library.robolectric-utils-3.0-rc3.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.vtd-xml-2.11.classpath"/>
    <path refid="library.asm-util-5.0.1.classpath"/>
    <path refid="library.bcprov-jdk16-1.46.classpath"/>
    <path refid="library.junit-4.12.classpath"/>
  </path>
  
  <path id="imageloader.runtime.module.classpath">
    <pathelement location="${imageloader.testoutput.dir}"/>
    <pathelement location="${imageloader.output.dir}"/>
    <path refid="library.maven-ant-tasks-2.1.3.classpath"/>
    <path refid="library.ant-1.8.0.classpath"/>
    <path refid="library.assertj-core-1.6.1.classpath"/>
    <path refid="library.icu4j-53.1.classpath"/>
    <path refid="library.robolectric-annotations-3.0-rc3.classpath"/>
    <path refid="library.shadows-core-3.0-rc3.classpath"/>
    <path refid="library.robolectric-3.0-rc3.classpath"/>
    <path refid="library.accessibility-test-framework-1.0.classpath"/>
    <path refid="library.asm-commons-5.0.1.classpath"/>
    <path refid="library.ant-launcher-1.8.0.classpath"/>
    <path refid="library.support-annotations-20.0.0.classpath"/>
    <path refid="library.robolectric-resources-3.0-rc3.classpath"/>
    <path refid="library.sqlite4java-0.282.classpath"/>
    <path refid="library.asm-tree-5.0.1.classpath"/>
    <path refid="library.asm-5.0.1.classpath"/>
    <path refid="library.assertj-android-1.0.0.classpath"/>
    <path refid="library.asm-analysis-5.0.1.classpath"/>
    <path refid="library.robolectric-utils-3.0-rc3.classpath"/>
    <path refid="library.hamcrest-core-1.3.classpath"/>
    <path refid="library.vtd-xml-2.11.classpath"/>
    <path refid="library.asm-util-5.0.1.classpath"/>
    <path refid="library.bcprov-jdk16-1.46.classpath"/>
    <path refid="library.junit-4.12.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.imageloader">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.imageloader">
    <patternset refid="excluded.from.module.imageloader"/>
  </patternset>
  
  <path id="imageloader.module.sourcepath">
    <dirset dir="${module.imageloader.basedir}">
      <include name="build/generated/source/r/debug"/>
      <include name="build/generated/source/aidl/debug"/>
      <include name="build/generated/source/buildConfig/debug"/>
      <include name="build/generated/source/rs/debug"/>
      <include name="build/generated/res/rs/debug"/>
      <include name="build/generated/res/resValues/debug"/>
      <include name="src/main/java"/>
    </dirset>
  </path>
  
  <path id="imageloader.module.test.sourcepath">
    <dirset dir="${module.imageloader.basedir}">
      <include name="build/generated/source/r/androidTest/debug"/>
      <include name="build/generated/source/aidl/androidTest/debug"/>
      <include name="build/generated/source/buildConfig/androidTest/debug"/>
      <include name="build/generated/source/rs/androidTest/debug"/>
      <include name="build/generated/res/rs/androidTest/debug"/>
      <include name="build/generated/res/resValues/androidTest/debug"/>
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.imageloader" depends="compile.module.imageloader.production,compile.module.imageloader.tests" description="Compile module imageLoader"/>
  
  <target name="compile.module.imageloader.production" depends="register.custom.compilers" description="Compile module imageLoader; production classes">
    <mkdir dir="${imageloader.output.dir}"/>
    <javac2 destdir="${imageloader.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.imageloader}/javac">
      <compilerarg line="${compiler.args.imageloader}"/>
      <bootclasspath refid="imageloader.module.bootclasspath"/>
      <classpath refid="imageloader.module.production.classpath"/>
      <src refid="imageloader.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.imageloader"/>
    </javac2>
    
    <copy todir="${imageloader.output.dir}">
      <fileset dir="${module.imageloader.basedir}/build/generated/source/r/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/source/aidl/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/source/buildConfig/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/source/rs/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/res/rs/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/res/resValues/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.imageloader.tests" depends="register.custom.compilers,compile.module.imageloader.production" description="compile module imageLoader; test classes" unless="skip.tests">
    <mkdir dir="${imageloader.testoutput.dir}"/>
    <javac2 destdir="${imageloader.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.imageloader}/javac">
      <compilerarg line="${compiler.args.imageloader}"/>
      <bootclasspath refid="imageloader.module.bootclasspath"/>
      <classpath refid="imageloader.module.classpath"/>
      <src refid="imageloader.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.imageloader"/>
    </javac2>
    
    <copy todir="${imageloader.testoutput.dir}">
      <fileset dir="${module.imageloader.basedir}/build/generated/source/r/androidTest/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/source/aidl/androidTest/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/source/buildConfig/androidTest/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/source/rs/androidTest/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/res/rs/androidTest/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/build/generated/res/resValues/androidTest/debug">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.imageloader.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.imageloader" description="cleanup module">
    <delete dir="${imageloader.output.dir}"/>
    <delete dir="${imageloader.testoutput.dir}"/>
  </target>
</project>